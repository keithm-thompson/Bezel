c
n
"app/assets/javascripts/bundle.js" =~ (/app\/assets/)
file_path =~ (/app\/assets/)
env['PATH_INFO']
c
n
c
env['PATH_INFO']
n
q
ext = File.extname(file_path)
Rack::Mime::MIME_TYPES["." + /\.(\w*$)/.match(file_path)[1]]
Rack::Mime::MIME_TYPES[/\.(\w*$)/.match(file_path)[1]]
Rack::Mime::MIME_TYPES[_]
/\.(\w*$)/.match(file_path)[1]
file_path = "/app/assets/stylesheets/canvas.css"
"/app/assets/stylesheets/canvas.css" =~ (/app\/assets/)
/app/assets/stylesheets/canvas.css =~ (/app\/assets/)
q
'app/assets/javascripts/bundle.js' =~ (/^p\/assets/)
'app/assets/javascripts/bundle.js' =~ (/^app\/assets/)
c
n
q
file_path
n
file_path
/\.(\w*$)/.match(file_path)
c
/\.(\w*$)/.match(file_path)
env['PATH_INFO']
c
app
c
q
@res
@RES
2RES
q
params
req.cookies['authenticity_token']
q
params
@params
@req.cookies['authenticity_token']
c
q
self.params['authenticity_token']
@req.cookies['authenticity_token']
q
@req.cookies
@req.cookies['authenticity_token']
@req
q
y
q
c
q
c
q
c
q
self.params
@authenticity_token
@req.cookies['authenticity_token']
@req
c
sc
s
spec 
s
n
s
self
c
q
check_authenticity_token(@req.cookies['authenticity_token'])
check_authenticity_token(req.cookies['authenticity_token'])
check_authenticity_token(@req.cookies['authenticity_token'])
@req.request_method
q
p bool
bool =check_authenticity_token(req.cookies['authenticity_token'])
check_authenticity_token(" ")
check_authenticity_token(req.cookies['authenticity_token'])
q
check_authenticity_token(req.cookies['authenticity_token'])
q
check_authenticity_token(req.cookies['authenticity_token'])
q
check_authenticity_token(req.cookies['authenticity_token'])
c
n
s
n
s
c
q
@req.request_method
@@csrf_auth
@req.cookies
c
q
c
n
nn
n
s
n
@req.cookies['authenticity_token']
@req
c
q
@req.request_method
@req["REQUEST_METHOD"]
@req['REQUEST_METHOD']
@req['REQUEST_METHOD]
@req
!req
c
name
c
display name
c
q
c
q
c
display @@csrf_auth
@@csrf_auth
c
@@csrf_auth
@csrf_auth
c
@@csrf_auth
q
c
@csrf_auth
c
@csrf_auth
c
@auth_token
[:index,:show].include?(name)
self
name
q
c
q
res.finish
res.write(content)
res.write(content
content
q
res.status = 404
res.status
n
s
extension = /\.(\w*$)/.match(file_path)[1]
/\.(\w*)$/.match(file_path)[1]
/\.(\w*)$/.match(file_path)
/\.(.*)$/.match(file_path)
/\.(.*$)/.match(file_path)
/\.(.*$)/.match(file_path)[2]
/\.(.*$)/.match(file_path)[1]
extension
n
q
env
file_path = env['FULL_PATH']
file_path = "." + env['FULL_PATH']
q
res
res.status = 404
env['path']
env.path
env.patj
better_path = "."+path
path = env['PATH_INFO']
File.read("./public/hello.txt")
File.read("/public/hello.txt")
File.read("/public/hello1.txt")
env
File.read("./public/hello1.txt")
File.read("./public/hello.txt")
q
File.read(/public/hello.txt)
/public/hello.txt
env
res
c
q
res
env
c
q
e.message
e.methods
e.messages
e
n
c
app.call
@app.call
@app
app.call
app.class
app.params
env
app
self
q
up
req.cookies
flash
c
@flash
c
q
req.cookies['_rails_lite_app_flash']
req.cookies[:_rails_lite_app_flash]
req.cookies
req
up
req
key
c
q
c
display req.cookies
req.cookies
req.cookie
req.params
req
q
@flash
key
c
@flash
key
q
@flash[key]
key
@flash
c
q
req.params[:flash]
req.params
req
c
q
@routes
s
c
z
route
