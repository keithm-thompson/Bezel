c
q
e.message
e.methods
e.messages
e
n
c
app.call
@app.call
@app
app.call
app.class
app.params
env
app
self
q
up
req.cookies
flash
c
@flash
c
q
req.cookies['_rails_lite_app_flash']
req.cookies[:_rails_lite_app_flash]
req.cookies
req
up
req
key
c
q
c
display req.cookies
req.cookies
req.cookie
req.params
req
q
@flash
key
c
@flash
key
q
@flash[key]
key
@flash
c
q
req.params[:flash]
req.params
req
c
q
@routes
s
c
z
route
n
@routes
s
self
c
q
action_name
req.request_method.downcase.to_sym
http_method
pattern =~ req.path
req.path
pattern
s
@routes
s
q
self
req.path
req
route
q
0 && true
router.routes.second.pattern =~ req.path
router.routes.first.pattern =~ req.path
router.routes.first.pattern
router.first.pattern
req.fullpath
req.request_method
router.routes
router.run(req,res)
q
router.routes
router.match(req)
router.run(req,res)
router
req
c
router
c
router
self
c
n
@routes
bundle exec rake routes
q
req.params
@req.fullpath
@req
req
req.fullpath
req.path
res
req
params
q
route_matches = @pattern.match("/users/42")
route_matches
route_matches = pattern.match("/users/42")
route_matches
route_matches.names
route_matches.each
pattern
route_matches
c
qc
q
controller
self
c
q
c
xc
x
z
draw
self.class_variables
self.instance_variables
res
req
self
self.class
http_method
pattern
self
c
n
s
res.write(req.params)
req.params
treq.params
q
controller_class
action_name
req.params
req.route_params
req.request_method
res
req
q
req.request_method.downcase.to_sym
req.request_method.to_sym
req.request_method
req.get?
@http_method
req.cookies
req.env.get_header
req..envget_header
req.get_header
req.method
@pattern.match("/user/1")
@pattern.match("/users/1")
@pattern.match(req.path).to_s == req.path
req.path
@pattern.match(req.path) == req.path
@pattern.match(req.path)
@pattern.class
@pattern.match?(req.path)
@pattern
req.path
req.env
req.env.rack
req.env
req.params
req.status
req.header
req
q
res
res.set_cookie('_rails_lite_app', value: json_cookie, path: '/' )
res
c
n
up
res
res.set_cookie('_rails_lite_app', value: json_cookie, path: '/' )
res.set_cookie('_rails_lite_app', value: json_cookie, path: :/ )
q
y
q
s
Session.new(@req)
Session.new(@req).class
@session
c
@req
q
res.set_cookie(json_cookie)
@cookie.to_json
q
@cookie
q
@cookie.keys
@cookie
q
JSON.parse(req.cookies['_rails_lite_app'])
req.cookies['_rails_lite_app'].from_json(json)
req.cookies['_rails_lite_app'].from_json
@cookie
q
req.cookies['_rails_lite_app']
req.cookies
req.cookie
q
content
q
ERB.new(File.read(file_name))
file_name
q
n
q
c
self.class.to_s.underscore
self.class.underscore
self.class.to_s.modelize
self.class.to_s.snakecase
self.class.snakecase
self.class
self
c
File.read("views/cats_controller/index.html.erb")
self
File.read("index.html.erb")
index
File.read(index)
File.read(index.html.erb)
File.read(template_name.html.erb)
File.read(template_name[1..-1].html.erb)
File.read(template_name)
template_name
q
c
@res
n
